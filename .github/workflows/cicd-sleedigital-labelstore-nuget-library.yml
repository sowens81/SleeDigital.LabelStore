name: CICD Library - SleeDigital LabelStore Library (Nuget)

on:
  push:
    branches: 
    - 'Main'
    - 'feature/**'
  pull_request:
    branches: 
    - 'Main'
    
env:
  dotnetSolutionName: SleeDigital.LabelStore.Library # Name of the libary Solution File name and directory name (.Net/Nuget), they need to be the same.
  rootDirectory: ./src/sharedlibraries/nuget
  developmentFrameworkVersion: 6.0.x # if .Net example 6.0.x / 

jobs:
  build:
    name: build-stage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.developmentFrameworkVersion }}
      
      - name: Restore dependencies
        run: |
          cd 
          dotnet restore
      
      - name: Build Solution
        run: |
          cd ${{ env.rootDirectory }}/${{ env.dotnetSolutionName }}
          run: dotnet build --no-restore
      
      - name: Test Solution
        run: |
          cd ${{ env.rootDirectory }}/${{ env.dotnetSolutionName }}
          run: dotnet test --no-build --verbosity normal

      - name: Generate coverage report
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/Main' }}
        run: |
          cd ${{ env.rootDirectory }}/${{ env.dotnetSolutionName }}/${{ env.dotnetSolutionName }}.Tests/
          dotnet test /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
      
      - name: Publish coverage report to coveralls.io
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/Main' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ env.rootDirectory }}/${{ env.dotnetSolutionName }}/${{ env.dotnetSolutionName }}.Tests/TestResults/coverage.info
